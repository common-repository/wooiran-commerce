<?php 	class Soap_WSDL{					public static $SoapClient; 									public static $soap_extension ; 							public static $wsdl_url; 									public $gateway_params = array();								public $result;						public function __construct( $wsdl_url=null, $args=array() ){			self::$wsdl_url = $wsdl_url;			self::$soap_extension = extension_loaded("soap");						$this->__init( $args ); 		}								public function __init( $args=array() ){						$params = wp_parse_args( $args, $this->gateway_params );			foreach( $params as $param => $value ){				$this->set_gateway_param( $param, trim( $value, " " ) );			}					}								public function set_gateway_param( $param, $value ){			$this->gateway_params[$param] = $value;		}								public function get_gateway_param( $param=null ){			if( $param && isset( $this->gateway_params[$param] ) ){				return $this->gateway_params[$param];			}			return "";		}						public function get_result(){				return $this->result;		}						public static function get_soap_client(){						if( ! self::$wsdl_url ){				self::$SoapClient = new WP_Error( "soap_invalid_wsdl_url", sprintf( __("The wsdl_url property is not set in the class %s", "wooiran-commerce"), __CLASS__ ) );				return self::$SoapClient;			}						if( self::$SoapClient ){				return self::$SoapClient;			}						# if soap extension exists			if( self::$soap_extension ){							try { 					self::$SoapClient = @new SoapClient( self::$wsdl_url );				} catch (Exception $e) { 										self::$SoapClient =  new WP_Error( esc_html( $e->faultcode ), esc_html( $e->getMessage() ) );				}								return self::$SoapClient;			}						# else using nusoap.class.php			self::$SoapClient = @new SoapClient( self::$wsdl_url, "wsdl" ); 						return self::$SoapClient;		}						public function call( $method=null, $args=array() ){			$this->__init( $args );						if( is_wp_error( self::get_soap_client() ) ){				return $this->result = self::get_soap_client();			}						if( $method && ! is_array( $method ) ){				# if soap extension exists				if( self::$soap_extension ){					try { 						$this->result = @self::get_soap_client()->__soapCall( "{$method}", array("parameters"=>$this->gateway_params) );										} catch (Exception $e) { 						$error_data = esc_html( print_r( $e->getMessage(), true ) ) ;						$this->result =  new WP_Error( esc_html( $e->faultcode ), $error_data );					}										return $this->result;				}								# else using nusoap.class.php				$this->result = self::get_soap_client()->Call( "{$method}", $this->gateway_params ); 				if( isset( $this->result["faultcode"] ) ){										$error_message = esc_html( print_r( $this->result["faultstring"], true ) );					return $this->result = new WP_Error( esc_html( $this->result["faultcode"] ), $error_message );				}				$this->result = json_decode( json_encode( $this->result ) );				return $this->result;							}						return new WP_Error("soap_invalid_method", __("The first argumarnt of SoapClient->call() is invalid.", "wooiran-commerce") );		}			}		